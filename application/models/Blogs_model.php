<?php
/* 
 * Generated by MegaBuilder v1.0 
 * www.MegaBuilder.com
 */
 
class Blogs_model extends CI_Model
{
    function __construct()
    {
        parent::__construct();
    }
    
    /*
     * Get blogs by id
     */
    function get_blogs($id)
    {
        return $this->db->get_where('blogs',array('id'=>$id))->row_array();
    }
    /*
     * Get blogs by id
     */
    function get_page_info($id)
    {
        return $this->db->get_where('blogs',array('slug'=>$id))->row_array();
    }
    ////////////////////
    function get_tblogs($title)
    {
        return $this->db->get_where('blogs',array('title'=>$title))->row_array();
    }
    /*
     * Get all blogs count
     */
    function get_all_blogs_count()
    {
        $this->db->from('blogs');
        return $this->db->count_all_results();
    }
        
    /*
     * Get all blogs
     */
    function get_all_blogs($params = array())
    {
		$this->db->where('types', '1');
        $this->db->order_by('id', 'desc');
        if(isset($params) && !empty($params))
        {
            $this->db->limit($params['limit'], $params['offset']);
        }
        return $this->db->get('blogs')->result_array();
    }
     /*
     * Get all blogs random
     */
    function get_rand_list($vals)
    {
        $this->db->where('types', '1');
        $this->db->order_by('id', 'RANDOM');
        $this->db->limit($vals,'0');
        return $this->db->get('blogs')->result_array();
    }    
    /*
     * function to add new blogs
     */
    function add_blogs($params)
    {
        $this->db->insert('blogs',$params);
        return $this->db->insert_id();
    }
    
    /*
     * function to update blogs
     */
    function update_blogs($id,$params)
    {
        $this->db->where('id',$id);
        return $this->db->update('blogs',$params);
    }
    
    /*
     * function to delete blogs
     */
    function delete_blogs($id)
    {
        return $this->db->delete('blogs',array('id'=>$id));
    }
}
