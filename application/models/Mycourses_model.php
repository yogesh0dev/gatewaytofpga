<?php
/* 
 * Generated by MegaBuilder v1.0 
 * www.MegaBuilder.com
 */
 
class Mycourses_model extends CI_Model
{
    function __construct()
    {
        parent::__construct();
    }
    
    /*
     * Get mycourses by id
     */
    function get_mycourses($id)
    {
        return $this->db->get_where('mycourses',array('id'=>$id))->row_array();
    }
	
	function get_cidsid($id)
    {
        return $this->db->get_where('mycourses',array('cidsid'=>$id))->row_array();
    }
	
	
	function get_mycourses_cid($id)
    {
        return $this->db->get_where('mycourses',array('course_id'=>$id,'studentid'=>$_SESSION['id']))->row_array();
    }
	
	function get_mycourses_bid($id)
    {
        return $this->db->get_where('mycourses',array('batch_id'=>$id,'studentid'=>$_SESSION['id']))->row_array();
    }
	
    /*
     * Get mycourses by id
     */
    function get_mycourses_byid($id,$sid)
    {
         return $this->db->get_where('mycourses',array('course_id'=>$id,'studentid'=>$sid))->result_array();
        // echo $this->db->last_query();
    }
	
	function get_mycourses_bybid($id,$sid)
    {
         return $this->db->get_where('mycourses',array('batch_id'=>$id,'studentid'=>$sid))->result_array();
        // echo $this->db->last_query();
    }
	
	
    function ifpurchased($sid)
    {
        return $this->db->get_where('mycourses',array('purchased'=>'1','studentid'=>$sid))->result_array();
    }
    
    /*
     * Get all mycourses count
     */
    function get_all_mycourses_count()
    {
        $this->db->from('mycourses');
        return $this->db->count_all_results();
    }
        
    /*
     * Get all mycourses
     */
    function get_all_mycourses($uid,$params = array())
    {
        // $this->db->where('purchased','1');
        $this->db->where('studentid',$uid);
        if($_SESSION['role']!='admin'){$this->db->where('status','Y');}
	$this->db->order_by('id', 'desc');
        if(isset($params) && !empty($params))
        {
            $this->db->limit($params['limit'], $params['offset']);
        }
        return $this->db->get('mycourses')->result_array();
    }
	
	/*
     * Get all mycourses get_all_mycourses_nonp
     */
    function get_all_mycourses_nonp()
    {
		$this->db->order_by('id', 'desc');
        return $this->db->get('mycourses')->result_array();
    }
	
	
	function get_all_mycourses_admin()
    {
        if($_SESSION['role']!='admin'){$this->db->where('status','Y');}
	$this->db->order_by('id', 'desc');
       
        return $this->db->get('mycourses')->result_array();
    }
	
    /*
     * Get all mycourses
     */
    function get_all_mycourses_list()
    {
		$uid=$_SESSION['id'];
        $this->db->where('studentid',$uid);
        if($_SESSION['role']!='admin'){$this->db->where('status','Y');}
	$this->db->order_by('id', 'desc');
        return $this->db->get('mycourses')->result_array();
    }
        
    /*
     * function to add new mycourses
     */
    function add_mycourses($params)
    {
        $insert=$this->db->insert('mycourses',$params);

		if (!$insert && $this->db->error()==1062) {
		   //some logics here, you may create some string here to alert user
		   return false;
		} else {
		   //other logics here
			return $this->db->insert_id();
		}
    }
    /*
     * function to update mycourses
     */
    function update_mycourses($id,$params)
    {
        $this->db->where('id',$id);
        return $this->db->update('mycourses',$params);
    }
    
    /*
     * function to delete mycourses
     */
    function delete_mycourses($id)
    {
        return $this->db->delete('mycourses',array('id'=>$id));
    }
}
