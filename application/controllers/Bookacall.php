<?php
/* 
 * Generated by MegaBuilder v1.0 
 * www.MegaBuilder.com
 */
 
class Bookacall extends CI_Controller{
    function __construct()
    {
        parent::__construct();
        $this->load->model('Bookacall_model');
        $this->load->model('Courses_model');
		
		
    } 

    /*
     * Listing of bookacall
     */
    function index()
    {
		$data = $this->session->userdata;
	if($data['role']!='admin'){
	        redirect(site_url().'signup');
	    }
        $params['limit'] = RECORDS_PER_PAGE; 
        $params['offset'] = ($this->input->get('per_page')) ? $this->input->get('per_page') : 0;
        
        $config = $this->config->item('pagination');
        $config['base_url'] = site_url('bookacall/index?');
        $config['total_rows'] = $this->Bookacall_model->get_all_bookacall_count();
        $this->pagination->initialize($config);

        $data['bookacall'] = $this->Bookacall_model->get_all_bookacall($params);
        
        $data['_view'] = 'bookacall/index';
        $this->load->view('layouts/main2',$data);
    }

/*
     * Adding a new chage status 
     */
	 
	 function status($status,$id)
    {
		$params = array('status' => $status);
		$params=$this->security->xss_clean($params);
		$this->Bookacall_model->update_bookacall($id,$params);        
		redirect(site_url().'bookacall');
    }

    /*
     * Adding a new mycourses ffffff
     */
	 
    /*
     * Adding a new bookacall ffffff
     */
    function add()
    {   
		
        $this->load->library('form_validation');

		//
		$this->form_validation->set_rules('name','Name','trim|required|max_length[255]');
		$this->form_validation->set_rules('email','Email','trim|required|max_length[100]');
		$this->form_validation->set_rules('phn','Phn','trim|required|numeric|max_length[12]');
		$this->form_validation->set_rules('Course','Course','trim|required|max_length[255]');
		$this->form_validation->set_rules('message','Message','trim|required');

		
		if($this->form_validation->run())   
        {  
			$params = array(
				//
				'name' => $this->input->post('name'),
				'email' => $this->input->post('email'),
				'phn' => $this->input->post('phn'),
				'course' => $this->input->post('Course'),
				'message' => $this->input->post('message'),

            );
            $params=$this->security->xss_clean($params);
			//var_dump($params);exit();
			$bk=$this->Bookacall_model->add_bookacall($params);
            if($bk){
				$bk=explode(',',$bk);
				//generate token
					$token=$bk[1];
					$paramsz = array(
						//
						'validcode' => $bk[1],
					);
					if($this->Bookacall_model->update_bookacall($bk[0],$paramsz)){
					
                    $qstring = $this->base64url_encode($token);
                    $url = site_url() . 'main/validate/token/' . $qstring;
                    $link = '<a href="' . $url . '">' . $url . '</a>';
    
                    $this->load->library('email');
                    $this->load->library('sendmail');
                    
                    $message = $this->sendmail->sendValidGuest($this->input->post('fullname'),$this->input->post('email'),$link,$token,$sTl);
                    $to_email = $this->input->post('email');
                    $this->email->from($this->config->item('forgot'), 'Validate Email! ' . $this->input->post('firstname') .' '. $this->input->post('lastname')); //from sender, title email
                    $this->email->to($to_email);
                    $this->email->subject('FPGA::Email Validation');
                    $this->email->message($message);
                    $this->email->set_mailtype("html");
    
                    if($this->email->send()){
						////////////////////////////
						echo '<form action="https://fpga.infotonicsmedia.com/svalidate/b" role="form" id="formid" onsubmit="submitForm(this)" enctype="multipart/form-data" method="post" accept-charset="utf-8">
										
						<div class="col-lg-12 col-md-12">
							<div class="form-group">
							<label class="form-group-label"><span class="text-danger">*</span>Validation Code</label>
							<input required="" class="form-control" placeholder="Validation Code" type="text" name="vcode" value="">
							<span class="text-danger"></span>
						</div> </div>
						<button class="default-btn" type="submit">Submit</button>

						</form>';
						////////////////////////////
						$this->load->library('email');
						$this->load->library('sendmail');
						$enquery="Book A Call";
						$message = $this->sendmail->sendFormsData($enquery,$params,$link,$token,$sTl);
						$to_email = 'shailender@infotonicsmedia.com';
						$this->email->from($this->config->item('forgot'), 'New Form From FPGA website! ' . $this->input->post('firstname') .' '. $this->input->post('lastname')); //from sender, title email
						$this->email->to($to_email);
						$this->email->subject('FPGA::New Form From FPGA website');
						$this->email->message($message);
						$this->email->set_mailtype("html");
		
						if($this->email->send()){
							$data['error']='Your Information stored successfully, We will get back to you asap :).';
						}else{
							$this->session->set_flashdata('flash_message', 'There was a problem sending an email.');
							echo 'error in sending email';
							exit;
						}
                        //redirect(site_url().'main/validates/');
						echo '1';
                    }else{
                        $this->session->set_flashdata('flash_message', 'There was a problem sending an email.');
						echo 'error in sending email';
                        exit;
                    }}else{
						echo 'nomail';
					}
					
		}}
			
        else
        {  
			if($_SESSION['role']=='admin'){
				$data['courses'] = $this->Courses_model->get_all_Courses();
				$data['_view'] = 'bookacall/add';
				$this->load->view('layouts/main2',$data);
			}else{
				echo validation_errors();
			}
        }
    }  

    /*
     * Editing a bookacall
     */
    function edit($id)
    {   
		$data = $this->session->userdata;
	if($data['role']!='admin'){
	        redirect(site_url().'signup');
	    }
        // check if the bookacall exists before trying to edit it
        $data['bookacall'] = $this->Bookacall_model->get_bookacall($id);
        
        if(isset($data['bookacall']['id']))
        {
            $this->load->library('form_validation');

			//
			$this->form_validation->set_rules('name','Name','trim|required|max_length[255]');
	$this->form_validation->set_rules('email','Email','trim|required|max_length[100]');
	$this->form_validation->set_rules('phn','Phn','trim|required|max_length[12]');
	$this->form_validation->set_rules('course','Course','trim|required|max_length[255]');
	$this->form_validation->set_rules('message','Message','trim|required');

		
			if($this->form_validation->run())     
            {   
                $params = array(
					//
					'name' => $this->input->post('name'),
					'email' => $this->input->post('email'),
					'phn' => $this->input->post('phn'),
					'course' => $this->input->post('course'),
					'message' => $this->input->post('message'),

                );
				$params=$this->security->xss_clean($params);
                $this->Bookacall_model->update_bookacall($id,$params);            
                redirect('bookacall/index');
            }
            else
            {
				$data['courses'] = $this->Courses_model->get_all_Courses();
                $data['_view'] = 'bookacall/edit';
                $this->load->view('layouts/main2',$data);
            }
        }
        else
            show_error('The bookacall you are trying to edit does not exist.');
    } 

    /*
     * Deleting bookacall
     */
    function remove($id)
    {
        $bookacall = $this->Bookacall_model->get_bookacall($id);

        // check if the bookacall exists before trying to delete it
        if(isset($bookacall['id']))
        {
            $this->Bookacall_model->delete_bookacall($id);
            redirect('bookacall/index');
        }
        else
            show_error('The bookacall you are trying to delete does not exist.');
    }
    public function sendRegister($vtoken){
        
        $message = '';
        $message .= 'Hi,<br>';
        $message .= '<br>';
        $message .= 'Welcome! you have signed up with our website with the following information:<br>';
        $message .= '<br>';
        $message .= '<strong>VALIDATION TOKEN : '.$vtoken.'</strong><br>';
        $message .= '<br>';
        $message .= 'Before you can login, you need to activate and set your Password';
        $message .= '<br>';
        $message .= 'Sincerely yours,<br>';
        $message .= 'Your Own Team :)';
        return $message;
    }
	public function base64url_encode($data) {
      return rtrim(strtr(base64_encode($data), '+/', '-_'), '=');
    }

    public function base64url_decode($data) {
      return base64_decode(str_pad(strtr($data, '-_', '+/'), strlen($data) % 4, '=', STR_PAD_RIGHT));
    }
}