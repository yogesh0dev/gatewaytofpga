<?php
/* 
 * Generated by MegaBuilder v1.0 
 * www.MegaBuilder.com
 */
 
class Marks extends CI_Controller{
    function __construct()
    {
        parent::__construct();
        $this->load->model('Marks_model');
        $this->load->model('Courses_model');
        $this->load->model('Users_model');
        $this->load->model('Curriculam_model');
		$data = $this->session->userdata;
	if($data['role']!='admin'){
	        redirect(site_url().'signup');
	    }
    } 

    /*
     * Listing of marks
     */
    function index()
    {
        $params['limit'] = RECORDS_PER_PAGE; 
        $params['offset'] = ($this->input->get('per_page')) ? $this->input->get('per_page') : 0;
        
        $config = $this->config->item('pagination');
        $config['base_url'] = site_url('marks/index?');
        $config['total_rows'] = $this->Marks_model->get_all_marks_count();
        $this->pagination->initialize($config);

        $data['marks'] = $this->Marks_model->get_all_marks($params);     
        $data['_view'] = 'marks/index';
        $this->load->view('layouts/main2',$data);
    }

    /*
     * Adding a new marks ffffff
     */
    function add()
    {   
        $this->load->library('form_validation');

		//
		$this->form_validation->set_rules('course_id','Course_id','trim|required|max_length[10]');
		$this->form_validation->set_rules('studentid','Studentid','trim|required|max_length[10]');
		$this->form_validation->set_rules('trainerid','Trainerid','trim|required|max_length[10]');
		$this->form_validation->set_rules('batch','Batch','trim|required|max_length[10]');
		$this->form_validation->set_rules('day','Day','trim|required|max_length[255]');
		$this->form_validation->set_rules('adate','Adate','trim|required');
		$this->form_validation->set_rules('attendence','Attendence','trim|required|max_length[10]');

		if($this->form_validation->run())     
        {   
            $params = array(
				//
				'course_id' => $this->input->post('course_id'),
				'studentid' => $this->input->post('studentid'),
				'trainerid' => $this->input->post('trainerid'),
				'batch' => $this->input->post('batch'),
				'day' => $this->input->post('day'),
				'adate' => $this->input->post('adate'),
				'attendence' => $this->input->post('attendence'),
            );
			
            $params=$this->security->xss_clean($params);
		
            $marks_id = $this->Marks_model->add_marks($params);
            redirect('marks/index');
        }
        else
        {  
            $data['courses'] = $this->Courses_model->get_all_Courses();
            $data['users'] = $this->Users_model->user_info();
            $data['curriculam'] = $this->Curriculam_model->get_all_curriculam_list();
            $data['_view'] = 'marks/add';
            $this->load->view('layouts/main2',$data);
        }
    }  

    /*
     * Editing a marks
     */
    function edit($id)
    {   
        // check if the marks exists before trying to edit it
        $data['marks'] = $this->Marks_model->get_marks($id);
        
        if(isset($data['marks']['id']))
        {
            $this->load->library('form_validation');

			// 
			$this->form_validation->set_rules('course_id','Course_id','trim|required|max_length[10]');
$this->form_validation->set_rules('studentid','Studentid','trim|required|max_length[10]');
$this->form_validation->set_rules('trainerid','Trainerid','trim|required|max_length[10]');
$this->form_validation->set_rules('batch','Batch','trim|required|max_length[10]');
$this->form_validation->set_rules('day','Day','trim|required|max_length[255]');
$this->form_validation->set_rules('adate','Adate','trim|required');
$this->form_validation->set_rules('attendence','Attendence','trim|required|max_length[10]');

		
			if($this->form_validation->run())     
            {   
                $params = array(
					//
					'course_id' => $this->input->post('course_id'),
'studentid' => $this->input->post('studentid'),
'trainerid' => $this->input->post('trainerid'),
'batch' => $this->input->post('batch'),
'day' => $this->input->post('day'),
'adate' => $this->input->post('adate'),
'attendence' => $this->input->post('attendence'),

                );
				$params=$this->security->xss_clean($params);
                $this->Marks_model->update_marks($id,$params);            
                redirect('marks/index');
            }
            else
            {
				$data['courses'] = $this->Courses_model->get_all_Courses();
            $data['users'] = $this->Users_model->user_info();
            $data['curriculam'] = $this->Curriculam_model->get_all_curriculam_list();
                $data['_view'] = 'marks/edit';
                $this->load->view('layouts/main2',$data);
            }
        }
        else
            show_error('The marks you are trying to edit does not exist.');
    } 

    /*
     * Deleting marks
     */
    function remove($id)
    {
        $marks = $this->Marks_model->get_marks($id);

        // check if the marks exists before trying to delete it
        if(isset($marks['id']))
        {
            $this->Marks_model->delete_marks($id);
            redirect('marks/index');
        }
        else
            show_error('The marks you are trying to delete does not exist.');
    }
    
}