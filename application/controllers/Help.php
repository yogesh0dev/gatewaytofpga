<?php
/* 
 * Generated by MegaBuilder v1.0 
 * www.MegaBuilder.com
 */
 
class Help extends CI_Controller{
    function __construct()
    {
        parent::__construct();
        $this->load->model('Help_model');
        $this->load->model('Courses_model');
        $this->load->model('Course_schedule_model');  
        $this->load->model('Users_model');
		
    } 

    /*
     * Listing of help
     */
    function index()
    {
		$data = $this->session->userdata;
	if($data['role']!='admin'){
	        redirect(site_url().'signup');
	    }
        $params['limit'] = RECORDS_PER_PAGE; 
        $params['offset'] = ($this->input->get('per_page')) ? $this->input->get('per_page') : 0;
        
        $config = $this->config->item('pagination');
        $config['base_url'] = site_url('help/index?');
        $config['total_rows'] = $this->Help_model->get_all_help_count();
        $this->pagination->initialize($config);

        $data['help'] = $this->Help_model->get_all_help($params);
        
        $data['_view'] = 'help/index';
        $this->load->view('layouts/main2',$data);
    }

    /*
     * Adding a new help ffffff
     */
    function add()
    {   
		$data = $this->session->userdata;
	if($data['role']!='admin'){
	        redirect(site_url().'signup');
	    }
        $this->load->library('form_validation');

		//
		$this->form_validation->set_rules('quest','Quest','trim|required|max_length[255]');
		$this->form_validation->set_rules('ans','Ans','trim|required');

		
		if($this->form_validation->run())     
        {   
            $params = array(
				//
				'quest' => $this->input->post('quest'),
				'answer' => $this->input->post('ans'),

            );
            $params=$this->security->xss_clean($params);
            $help_id = $this->Help_model->add_help($params);
            redirect('help/index');
        }
        else
        {       
			
			
				
            $data['_view'] = 'help/add';
            $this->load->view('layouts/main2',$data);
        }
    }  

    /*
     * Editing a help
     */
    function edit($id)
    {   
		$data = $this->session->userdata;
	if($data['role']!='admin'){
	        redirect(site_url().'signup');
	    }
        // check if the help exists before trying to edit it
        $data['help'] = $this->Help_model->get_help($id);
        
        if(isset($data['help']['id']))
        {
            $this->load->library('form_validation');

			//
			$this->form_validation->set_rules('quest','Quest','trim|required|max_length[255]');
$this->form_validation->set_rules('ans','Ans','trim|required');

		
			if($this->form_validation->run())     
            {   
                $params = array(
					//
					'quest' => $this->input->post('quest'),
					'answer' => $this->input->post('ans'),

                );
				$params=$this->security->xss_clean($params);
                $this->Help_model->update_help($id,$params);            
                redirect('help/index');
            }
            else
            {
                $data['_view'] = 'help/edit';
                $this->load->view('layouts/main2',$data);
            }
        }
        else
            show_error('The help you are trying to edit does not exist.');
    } 
function myedit($id)
    {   
        // check if the help exists before trying to edit it
        $data['help'] = $this->Help_model->get_help($id);
        
        if(isset($data['help']['id']))
        {
            $this->load->library('form_validation');

			//
			$this->form_validation->set_rules('answer','Ans','trim|required');
			if($_POST['oldans']!=''){
				$ans1=$this->input->post('oldans').'<br>';
			}else{
				$ans1="";
			}
			$ans2=$this->input->post('answer');
			$ans=$ans1.'['.date('d-m-y').']: '.$ans2;
			if($this->form_validation->run())     
            {   
                $params = array(
					//
					
					'answer' => $ans,

                );
				$params=$this->security->xss_clean($params);
                if($this->Help_model->update_help($id,$params)){           
					echo '1';
				}
            }
            else
            {
                echo validation_errors();
            }
        }
        else
            show_error('The help you are trying to edit does not exist.');
    } 
    /*
     * Deleting help
     */
    function remove($id)
    {
        $help = $this->Help_model->get_help($id);

        // check if the help exists before trying to delete it
        if(isset($help['id']))
        {
            $this->Help_model->delete_help($id);
            redirect('help/index');
        }
        else
            show_error('The help you are trying to delete does not exist.');
    }
    
}