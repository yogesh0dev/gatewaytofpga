<?php
/* 
 * Generated by MegaBuilder v1.0 
 * www.MegaBuilder.com
 */
 
class Course_details extends CI_Controller{
    function __construct()
    {
        parent::__construct();
        $this->load->model('Course_details_model');
		$this->load->model('Courses_model');
        $this->load->model('Users_model');
        $this->load->model('Curriculam_model');
        $this->load->model('Course_schedule_model');
    } 

    /*
     * Listing of course_details
     */
    function index()
    {
        $data['course_details'] = $this->Course_details_model->get_all_course_details();
        
        $data['_view'] = 'course_details/index';
        $this->load->view('layouts/main2',$data);
    }

 function fcourse($id)
    {
        $s=$this->Course_schedule_model->get_Course_schedule($id);
        $uiyiu=$this->Courses_model->get_courses($s['course_id']);
		echo json_encode($uiyiu);
    }


    /*
     * Adding a new course_details ffffff
     */
    function add()
    {   
	
		$data = $this->session->userdata;
	if($data['role']!='admin'){
	        redirect(site_url().'signup');
	    }
        $this->load->library('form_validation');

		//course syllabus
		$this->form_validation->set_rules('course_id','Course_id','trim|required|max_length[10]');
		$this->form_validation->set_rules('description','Description','trim|required');
		$this->form_validation->set_rules('whoattend','Whoattend','trim|required');
		$this->form_validation->set_rules('prerequ','Prerequ','trim|required');
		$this->form_validation->set_rules('skills','Skills','trim|required');
		$this->form_validation->set_rules('course_syl','Course Syllabus','trim|required');

		
		if($this->form_validation->run())     
        {   
            $params = array(
				//
				'course_id' => $this->input->post('course_id'),
'description' => $this->input->post('description'),
'whoattend' => $this->input->post('whoattend'),
'prerequ' => $this->input->post('prerequ'),
'skills' => $this->input->post('skills'),
'course_syl' => $this->input->post('course_syl'),

            );
            $params=$this->security->xss_clean($params);
            $course_details_id = $this->Course_details_model->add_course_details($params);
            redirect('curriculam/add');
        }
        else
        {       
			
			
			$data['courses'] = $this->Courses_model->get_all_Courses();
            $data['users'] = $this->Users_model->user_info();
            $data['curriculam'] = $this->Curriculam_model->get_all_curriculam_list();
            $data['_view'] = 'course_details/add';
            $this->load->view('layouts/main2',$data);
        }
    }  

    /*
     * Editing a course_details
     */
    function edit($id)
    {   
	
		$data = $this->session->userdata;
	if($data['role']!='admin'){
	        redirect(site_url().'signup');
	    }
        // check if the course_details exists before trying to edit it
        $data['course_details'] = $this->Course_details_model->get_course_details($id);
        
        if(isset($data['course_details']['id']))
        {
            $this->load->library('form_validation');

			//
			$this->form_validation->set_rules('course_id','Course_id','trim|required|max_length[10]');
$this->form_validation->set_rules('description','Description','trim|required');
$this->form_validation->set_rules('whoattend','Whoattend','trim|required');
$this->form_validation->set_rules('prerequ','Prerequ','trim|required');
$this->form_validation->set_rules('skills','Skills','trim|required');
		$this->form_validation->set_rules('course_syl','Course Syllabus','trim|required');

		
			if($this->form_validation->run())     
            {   
                $params = array(
					//
					'course_id' => $this->input->post('course_id'),
'description' => $this->input->post('description'),
'whoattend' => $this->input->post('whoattend'),
'prerequ' => $this->input->post('prerequ'),
'skills' => $this->input->post('skills'),
'course_syl' => $this->input->post('course_syl'),

                );
				$params=$this->security->xss_clean($params);
                $this->Course_details_model->update_course_details($id,$params);            
                redirect('course_details/index');
            }
            else
            {
				$data['courses'] = $this->Courses_model->get_all_Courses();
            $data['users'] = $this->Users_model->user_info();
            $data['curriculam'] = $this->Curriculam_model->get_all_curriculam_list();
                $data['_view'] = 'course_details/edit';
                $this->load->view('layouts/main2',$data);
            }
        }
        else
            show_error('The course_details you are trying to edit does not exist.');
    } 

    /*
     * Deleting course_details
     */
    function remove($id)
    {
        $course_details = $this->Course_details_model->get_course_details($id);

        // check if the course_details exists before trying to delete it
        if(isset($course_details['id']))
        {
            $this->Course_details_model->delete_course_details($id);
            redirect('course_details/index');
        }
        else
            show_error('The course_details you are trying to delete does not exist.');
    }
    
}