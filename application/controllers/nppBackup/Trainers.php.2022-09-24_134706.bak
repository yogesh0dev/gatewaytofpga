<?php
/* 
 * Generated by MegaBuilder v1.0 
 * www.MegaBuilder.com
 */
 
class Trainers extends CI_Controller{
    function __construct()
    {
        parent::__construct();
        $this->load->model('Trainers_model');
		$this->load->model('Category_model');
		$this->load->model('Course_schedule_model');
		$this->load->model('Courses_model');
		//check user level
		$data = $this->session->userdata;
	    if(empty($data['role'])){
	        redirect(site_url().'login');
	    }elseif($data['role']=='student'){
	        redirect(site_url().'home');
	    }
    } 

    /*
     * Listing of trainers
     */
    function index()
    {
        $params['limit'] = RECORDS_PER_PAGE; 
        $params['offset'] = ($this->input->get('per_page')) ? $this->input->get('per_page') : 0;
        
        $config = $this->config->item('pagination');
        $config['base_url'] = site_url('trainers/index?');
        $config['total_rows'] = $this->Trainers_model->get_all_trainers_count();
        $this->pagination->initialize($config);

        $data['trainers'] = $this->Trainers_model->get_all_trainers($params);
        
        $data['_view'] = 'trainers/index';
        $this->load->view('layouts/main',$data);
    }

    /*
     * Adding a new trainers ffffff
     */
    function add()
    {   
        $this->load->library('form_validation');

		//
		
		
		if($this->form_validation->run())     
        {   
            $params = array(
				//
				
            );
            $params=$this->security->xss_clean($params);
            $trainers_id = $this->Trainers_model->add_trainers($params);
            redirect('trainers/index');
        }
        else
        {       
			
			
				
            $data['_view'] = 'trainers/add';
            $this->load->view('layouts/main',$data);
        }
    }  

    /*
     * Editing a trainers
     */
    function edit($id)
    {   
        // check if the trainers exists before trying to edit it
        $data['trainers'] = $this->Trainers_model->get_trainers($id);
        
        if(isset($data['trainers']['id']))
        {
            $this->load->library('form_validation');

			//
			
		
			if($this->form_validation->run())     
            {   
                $params = array(
					//
					
                );
				$params=$this->security->xss_clean($params);
                $this->Trainers_model->update_trainers($id,$params);            
                redirect('trainers/index');
            }
            else
            {
                $data['_view'] = 'trainers/edit';
                $this->load->view('layouts/main',$data);
            }
        }
        else
            show_error('The trainers you are trying to edit does not exist.');
    } 

    /*
     * Deleting trainers
     */
    function remove($id)
    {
        $trainers = $this->Trainers_model->get_trainers($id);

        // check if the trainers exists before trying to delete it
        if(isset($trainers['id']))
        {
            $this->Trainers_model->delete_trainers($id);
            redirect('trainers/index');
        }
        else
            show_error('The trainers you are trying to delete does not exist.');
    }
	
	public function dashboard()
	{
		$uid=$_SESSION['id'];

		$this->load->model('Course_schedule_model');
		$this->load->model('Courses_model');
		$this->load->model('Batch_student_model');
		$this->load->model('Users_model');
		
		$params['limit'] = RECORDS_PER_PAGE; 
        $params['offset'] = ($this->input->get('per_page')) ? $this->input->get('per_page') : 0;
        
        $config = $this->config->item('pagination');
        $config['base_url'] = site_url('course_schedule/index?');
        $config['total_rows'] = $this->Course_schedule_model->get_courses_schedule_count($uid);
        $this->pagination->initialize($config);
		

		$data['batches'] = $this->Course_schedule_model->get_all_course_schedule_id($uid,$params);
		$data['page']="trainers";
		$data['_view'] = 'TeacherPanel/trainers_dashboard';
        $this->load->view('FrontWebsite/layout/main',$data);
	}
	
	
	 public function all_courses()
	{
		
		
		$params['limit'] = RECORDS_PER_PAGE; 
        $params['offset'] = ($this->input->get('per_page')) ? $this->input->get('per_page') : 0;
        
        $config = $this->config->item('pagination');
        $config['base_url'] = site_url('course_schedule/index?');
        $config['total_rows'] = $this->Courses_model->get_all_courses_count();
        $this->pagination->initialize($config);
		$data['rcateg'] = $this->Category_model->get_rand_list('5');
		$data['catregr'] = $this->Category_model->get_rand_list('25');
		$data['courses'] = $this->Courses_model->get_courses_all_info($params);
		$data['page']="trainers";
		$data['_view'] = 'TeacherPanel/trainers_all_courses';
        $this->load->view('FrontWebsite/layout/main',$data);
	}
	
	
	public function trainers_help()
	{
		$uid=$_SESSION['id'];
		$this->load->model('Help_model');
		$data['page'] = 'trainers';
		
		$data['myhelp'] = $this->Help_model->get_all_help_tlist($uid);
		$data['_view'] = 'TeacherPanel/trainers_help';
        $this->load->view('FrontWebsite/layout/main',$data);
	}
	public function trainers_leave_testimony()
	{
		$uid=$_SESSION['id'];
		$data['page'] = 'trainers';
		$this->load->model('Courses_model');
		$data['mycourses'] = $this->Courses_model->get_courses_all_bytid_list();
		$data['rcateg'] = $this->Category_model->get_rand_list('5');
		$data['catregr'] = $this->Category_model->get_rand_list('25');
		$data['_view'] = 'TeacherPanel/trainers_leave_testimony';
        $this->load->view('FrontWebsite/layout/main',$data);
	}
	
	public function trainers_testimonials()
	{
		$uid=$_SESSION['id'];
		$data['page'] = 'trainers';
		$this->load->model('Testimony_model');
		$this->load->model('Courses_model');
		$params['limit'] = RECORDS_PER_PAGE; 
        $params['offset'] = ($this->input->get('per_page')) ? $this->input->get('per_page') : 0;
        
        $config = $this->config->item('pagination');
        $config['base_url'] = site_url('testimony/index?');
        $config['total_rows'] = $this->Testimony_model->get_all_testimony_count();
        $this->pagination->initialize($config);

        $data['testimony'] = $this->Testimony_model->get_all_testimony($params);

		$data['_view'] = 'TeacherPanel/trainers_testimonials';
        $this->load->view('FrontWebsite/layout/main',$data);
	}
	
	public function trainers_payment()
	{
		$uid=$_SESSION['id'];
		$data['page'] = 'trainers';
		$this->load->model('Payments_model');
		$this->load->model('Courses_model');
		$params['limit'] = RECORDS_PER_PAGE; 
        $params['offset'] = ($this->input->get('per_page')) ? $this->input->get('per_page') : 0;
        
        $config = $this->config->item('pagination');
        $config['base_url'] = site_url('testimony/index?');
        $config['total_rows'] = $this->Payments_model->get_all_payments_count();
        $this->pagination->initialize($config);
        $data['payments'] = $this->Payments_model->get_all_payments($params);
		$data['_view'] = 'TeacherPanel/trainers_payment';
        $this->load->view('FrontWebsite/layout/main',$data);
	}
	
	public function trainers_edit_profile()
	{
		$uid=$_SESSION['id'];
		$data['page'] = 'trainers';
		$uid="1";
		$this->load->model('Users_model');
        $data['payments'] = $this->Users_model->get_users($uid);
		$data['_view'] = 'TeacherPanel/trainers_edit_profile';
        $this->load->view('FrontWebsite/layout/main',$data);
	}
	
	public function trainers_courses()
	{
		$uid=$_SESSION['id'];
		$this->load->model('Courses_model');
		$params['limit'] = RECORDS_PER_PAGE; 
        $params['offset'] = ($this->input->get('per_page')) ? $this->input->get('per_page') : 0;
        
        $config = $this->config->item('pagination');
        $config['base_url'] = site_url('mycourses/index?');
        $this->pagination->initialize($config);

        $config['total_rows'] = $this->Course_schedule_model->get_courses_schedule_count($uid);
		

		$data['batches'] = $this->Course_schedule_model->get_all_course_schedule_id($uid,$params);
        
		$data['page'] = 'trainers';
		$data['rcateg'] = $this->Category_model->get_rand_list('5');
		$data['catregr'] = $this->Category_model->get_rand_list('25');
        
		$data['_view'] = 'TeacherPanel/trainers_courses';
        $this->load->view('FrontWebsite/layout/main',$data);
	}
	public function trainers_material()
	{
		$uid=$_SESSION['id'];
		$this->load->model('Courses_model');
		$this->load->model('Course_material_model');
		$params['limit'] = RECORDS_PER_PAGE; 
        $params['offset'] = ($this->input->get('per_page')) ? $this->input->get('per_page') : 0;
        
        $config = $this->config->item('pagination');
        $config['base_url'] = site_url('mycourses/index?');
        $this->pagination->initialize($config);

        $config['total_rows'] = $this->Course_schedule_model->get_courses_schedule_count($uid);
		$data['batches'] = $this->Course_schedule_model->get_all_course_schedule_id_distinct($uid,$params);
		
		$data['page'] = 'trainers';
		$data['rcateg'] = $this->Category_model->get_rand_list('5');
		$data['catregr'] = $this->Category_model->get_rand_list('25');
        
		$data['_view'] = 'TeacherPanel/trainers_material';
        $this->load->view('FrontWebsite/layout/main',$data);
	}
	public function trainers_assignments()
	{
		$uid=$_SESSION['id'];
		$this->load->model('Courses_model');
		$this->load->model('Assignments_model');
		$params['limit'] = RECORDS_PER_PAGE; 
        $params['offset'] = ($this->input->get('per_page')) ? $this->input->get('per_page') : 0;
        
        $config = $this->config->item('pagination');
        $config['base_url'] = site_url('mycourses/index?');
        $this->pagination->initialize($config);

        $config['total_rows'] = $this->Course_schedule_model->get_courses_schedule_count($uid);
		$data['batches'] = $this->Course_schedule_model->get_all_course_schedule_id($uid,$params);
        
		$data['page'] = 'trainers';
		$data['rcateg'] = $this->Category_model->get_rand_list('5');
		$data['catregr'] = $this->Category_model->get_rand_list('25');
        
		$data['_view'] = 'TeacherPanel/trainers_assignments';
        $this->load->view('FrontWebsite/layout/main',$data);
	}
	
	public function trainers_certificate()
	{
		$uid=$_SESSION['id'];
		$this->load->model('Courses_model');
		$this->load->model('Certifications_model');
		$params['limit'] = RECORDS_PER_PAGE; 
        $params['offset'] = ($this->input->get('per_page')) ? $this->input->get('per_page') : 0;
        
        $config = $this->config->item('pagination');
        $config['base_url'] = site_url('mycourses/index?');
        $config['total_rows'] = $this->Courses_model->get_courses_all_bytid_count($uid);
        $this->pagination->initialize($config);

        $data['mycourses'] = $this->Courses_model->get_courses_all_bytid($uid,$params);
        
		$data['page'] = 'trainers';
		$data['rcateg'] = $this->Category_model->get_rand_list('5');
		$data['catregr'] = $this->Category_model->get_rand_list('25');
        
		$data['_view'] = 'TeacherPanel/trainers_certificate';
        $this->load->view('FrontWebsite/layout/main',$data);
	}
	
	
	public function trainers_test()
	{
		$uid=$_SESSION['id'];
		$this->load->model('Courses_model');
		$this->load->model('Tests_model');
		$params['limit'] = RECORDS_PER_PAGE; 
        $params['offset'] = ($this->input->get('per_page')) ? $this->input->get('per_page') : 0;
        
        $config = $this->config->item('pagination');
        $config['base_url'] = site_url('mycourses/index?');
        $this->pagination->initialize($config);

        $config['total_rows'] = $this->Course_schedule_model->get_courses_schedule_count($uid);
		$data['batches'] = $this->Course_schedule_model->get_all_course_schedule_id($uid,$params);
        
		$data['page'] = 'trainers';
		$data['rcateg'] = $this->Category_model->get_rand_list('5');
		$data['catregr'] = $this->Category_model->get_rand_list('25');
        
		$data['_view'] = 'TeacherPanel/trainers_test';
        $this->load->view('FrontWebsite/layout/main',$data);
	}
	
	public function trainers_student()
	{
		$uid=$_SESSION['id'];
		$this->load->model('Trainers_model');
		$this->load->model('Course_schedule_model');
		$this->load->model('Batch_student_model');
		$this->load->model('Users_model');
		$params['limit'] = RECORDS_PER_PAGE; 
        $params['offset'] = ($this->input->get('per_page')) ? $this->input->get('per_page') : 0;
        
        $config = $this->config->item('pagination');
        $config['base_url'] = site_url('trainers/index?');
        $this->pagination->initialize($config);

        $config['total_rows'] = $this->Course_schedule_model->get_courses_schedule_count($uid);
		$data['batches'] = $this->Course_schedule_model->get_all_course_schedule_id($uid,$params);
        
		$data['page'] = 'trainers';
		$data['rcateg'] = $this->Category_model->get_rand_list('5');
		$data['catregr'] = $this->Category_model->get_rand_list('25');
        
		$data['_view'] = 'TeacherPanel/trainers_student';
        $this->load->view('FrontWebsite/layout/main',$data);
	}
	
	public function add_assignments(){
		$uid=$_SESSION['id'];
		$data['page'] = 'trainers';
		$data['batches'] = $this->Course_schedule_model->get_all_course_schedule_id($uid,$params);
		$data['_view'] = 'TeacherPanel/trainers_addassignment';
        $this->load->view('FrontWebsite/layout/main',$data);
	}
	
	
	public function add_test(){
		$this->load->model('Tests_model');
		$uid=$_SESSION['id'];
		$data['page'] = 'trainers';
		$data['batches'] = $this->Course_schedule_model->get_all_course_schedule_id($uid,$params);
		$data['_view'] = 'TeacherPanel/trainers_addtest';
        $this->load->view('FrontWebsite/layout/main',$data);
	}
	
	
	public function trainers_help_reply($id){
		$this->load->model('Help_model');
		$this->load->model('Batch_student_model');
		$uid=$_SESSION['id'];
		$data['page'] = 'trainers';
		$data['pid'] = $id;
		
		// check if the help exists before trying to edit it
        $data['help'] = $this->Help_model->get_help($id);
		$data['_view'] = 'TeacherPanel/trainers_help_reply';
        $this->load->view('FrontWebsite/layout/main',$data);
	}
	public function attendace($id){
		$this->load->model('Users_model');
		$this->load->model('Batch_student_model');
		$uid=$_SESSION['id'];
		$data['page'] = 'trainers';
		$data['pid'] = $id;
		$data['batches'] = $this->Batch_student_model->get_all_student_info($id);
		$data['_view'] = 'TeacherPanel/attendance';
        $this->load->view('FrontWebsite/layout/main',$data);
	}
	
	
	public function sattendace($id){
		$this->load->model('Users_model');
		$this->load->model('Batch_student_model');
		$this->load->model('Attendance_model');
		$uid=$_SESSION['id'];
		$data['pid'] = $id;
		$sid=$_POST['st'];
	
		foreach($sid as $st){
			
		$batches= $this->Batch_student_model->get_batch_student($id);
		
			$params = array(
					'course_id' => $batches['course_id'],
					'studentid' => $st,
					'trainerid' => $batches['course_id'],
					'batch' => $_SESSION['id'],
					'day' => date('l'),
					'adate' => date("Y-m-d H:i:s"),
					'attendence' => '1'
                );
			$params=$this->security->xss_clean($params);
			if($this->Attendance_model->add_attendance($params)){
				$ty= '1';
			}
			
		}
		if($ty!=''){
			echo '1';
		}else{
				echo "Looks like an error. Please submit form again";
			}
	}
	
	
	
	
    
}