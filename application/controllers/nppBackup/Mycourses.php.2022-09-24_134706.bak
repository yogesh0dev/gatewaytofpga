<?php
/* 
 * Generated by MegaBuilder v1.0 
 * www.MegaBuilder.com
 */
 
class Mycourses extends CI_Controller{
    function __construct()
    {
        parent::__construct();
        $this->load->model('Mycourses_model');
        $this->load->model('Courses_model');
        $this->load->model('Users_model');
        $this->load->model('Curriculam_model');
    } 

    /*
     * Listing of mycourses
     */
    function index()
    {
        $params['limit'] = RECORDS_PER_PAGE; 
        $params['offset'] = ($this->input->get('per_page')) ? $this->input->get('per_page') : 0;
        
        $config = $this->config->item('pagination');
        $config['base_url'] = site_url('mycourses/index?');
        $config['total_rows'] = $this->Mycourses_model->get_all_mycourses_count();
        $this->pagination->initialize($config);
		$uid=$_SESSION['id'];
        // $data['mycourses'] = $this->Mycourses_model->get_all_mycourses($uid,$params);
        $data['mycourses'] = $this->Mycourses_model->get_all_mycourses_admin();
        // var_dump($data);exit();
        $data['_view'] = 'mycourses/index';
        $this->load->view('layouts/main',$data);
    }

    /*
     * Adding a new mycourses ffffff
     */
    function add()
    {   
        $this->load->library('form_validation');

		//
		$this->form_validation->set_rules('course_id','Course_id','trim|required|max_length[10]');
$this->form_validation->set_rules('studentid','Studentid','trim|required|max_length[10]');
$this->form_validation->set_rules('completed','Completed','trim|required|max_length[10]');
$this->form_validation->set_rules('module_id','Module_id','trim|required|max_length[10]');
$this->form_validation->set_rules('tid','Tid','trim|required|max_length[10]');

		
		if($this->form_validation->run())     
        {   
            $params = array(
				//
				'course_id' => $this->input->post('course_id'),
				'studentid' => $this->input->post('studentid'),
				'completed' => $this->input->post('completed'),
				'module_id' => $this->input->post('module_id'),
				'tid' => $this->input->post('tid'),

            );
            $params=$this->security->xss_clean($params);
            $mycourses_id = $this->Mycourses_model->add_mycourses($params);
            redirect('mycourses/index');
        }
        else
        {       
			
			 
           $data['users'] = $this->Users_model->user_info();
            $data['curriculam'] = $this->Curriculam_model->get_all_curriculam_list();
             
            $data['_view'] = 'mycourses/add';
            $this->load->view('layouts/main',$data);
        }
    }  

    /*
     * Editing a mycourses
     */
    function edit($id)
    {   
        // check if the mycourses exists before trying to edit it
        $data['mycourses'] = $this->Mycourses_model->get_mycourses($id);
        
        if(isset($data['mycourses']['id']))
        {
            $this->load->library('form_validation');

			//
			$this->form_validation->set_rules('course_id','Course_id','trim|required|max_length[10]');
$this->form_validation->set_rules('studentid','Studentid','trim|required|max_length[10]');
$this->form_validation->set_rules('completed','Completed','trim|required|max_length[10]');
$this->form_validation->set_rules('module_id','Module_id','trim|required|max_length[10]');
$this->form_validation->set_rules('tid','Tid','trim|required|max_length[10]');

		
			if($this->form_validation->run())     
            {   
                $params = array(
					//
					'course_id' => $this->input->post('course_id'),
'studentid' => $this->input->post('studentid'),
'completed' => $this->input->post('completed'),
'module_id' => $this->input->post('module_id'),
'tid' => $this->input->post('tid'),

                );
				$params=$this->security->xss_clean($params);
                $this->Mycourses_model->update_mycourses($id,$params);            
                redirect('mycourses/index');
            }
            else
            {
				 

            $data['users'] = $this->Users_model->user_info();
            $data['curriculam'] = $this->Curriculam_model->get_all_curriculam_list();
            
                $data['_view'] = 'mycourses/edit';
                $this->load->view('layouts/main',$data);
            }
        }
        else
            show_error('The mycourses you are trying to edit does not exist.');
    } 

    /*
     * Deleting mycourses
     */
    function remove($id)
    {
        $mycourses = $this->Mycourses_model->get_mycourses($id);

        // check if the mycourses exists before trying to delete it
        if(isset($mycourses['id']))
        {
            $this->Mycourses_model->delete_mycourses($id);
            redirect('mycourses/index');
        }
        else
            show_error('The mycourses you are trying to delete does not exist.');
    }
    
}