<?php
/* 
 * Generated by MegaBuilder v1.0 
 * www.MegaBuilder.com
 */
 
class Course_schedule extends CI_Controller{
    function __construct()
    {
        parent::__construct();
        $this->load->model('Course_schedule_model');
		$this->load->model('Courses_model');
        $this->load->model('Users_model');
        $this->load->model('Curriculam_model');
    } 

    /*
     * Listing of course_schedule
     */
    function index()
    {
        $params['limit'] = RECORDS_PER_PAGE; 
        $params['offset'] = ($this->input->get('per_page')) ? $this->input->get('per_page') : 0;
        
        $config = $this->config->item('pagination');
        $config['base_url'] = site_url('course_schedule/index?');
        $config['total_rows'] = $this->Course_schedule_model->get_all_course_schedule_count();
        $this->pagination->initialize($config);

        $data['course_schedule'] = $this->Course_schedule_model->get_all_course_schedule($params);
        
        $data['_view'] = 'course_schedule/index';
        $this->load->view('layouts/main',$data);
    }

    /*
     * Adding a new course_schedule ffffff
     */
    function add()
    {   
        $this->load->library('form_validation');

		//
		$this->form_validation->set_rules('course_id','Course_id','trim|required|max_length[10]');
$this->form_validation->set_rules('tid','Tid','trim|required|max_length[10]');
$this->form_validation->set_rules('bdate','Bdate','trim|required|max_length[10]');
$this->form_validation->set_rules('module_name','Module_name','trim|required|max_length[255]');

		
		if($this->form_validation->run())     
        {   
            $params = array(
				//
				'course_id' => $this->input->post('course_id'),
'tid' => $this->input->post('tid'),
'bdate' => $this->input->post('bdate'),
'module_name' => $this->input->post('module_name'),

            );
            $params=$this->security->xss_clean($params);
            $course_schedule_id = $this->Course_schedule_model->add_course_schedule($params);
            redirect('course_schedule/index');
        }
        else
        {       
			$data['courses'] = $this->Courses_model->get_all_Courses();
            $data['users'] = $this->Users_model->user_info();
            $data['curriculam'] = $this->Curriculam_model->get_all_curriculam_list();
			
				
            $data['_view'] = 'course_schedule/add';
            $this->load->view('layouts/main',$data);
        }
    }  

    /*
     * Editing a course_schedule
     */
    function edit($id)
    {   
        // check if the course_schedule exists before trying to edit it
        $data['course_schedule'] = $this->Course_schedule_model->get_course_schedule($id);
        
        if(isset($data['course_schedule']['id']))
        {
            $this->load->library('form_validation');

			//
			$this->form_validation->set_rules('course_id','Course_id','trim|required|max_length[10]');
$this->form_validation->set_rules('tid','Tid','trim|required|max_length[10]');
$this->form_validation->set_rules('bdate','Bdate','trim|required|max_length[10]');
$this->form_validation->set_rules('module_name','Module_name','trim|required|max_length[255]');

		
			if($this->form_validation->run())     
            {   
                $params = array(
					//
					'course_id' => $this->input->post('course_id'),
'tid' => $this->input->post('tid'),
'bdate' => $this->input->post('bdate'),
'module_name' => $this->input->post('module_name'),

                );
				$params=$this->security->xss_clean($params);
                $this->Course_schedule_model->update_course_schedule($id,$params);            
                redirect('course_schedule/index');
            }
            else
            {
				$data['courses'] = $this->Courses_model->get_all_Courses();
            $data['users'] = $this->Users_model->user_info();
            $data['curriculam'] = $this->Curriculam_model->get_all_curriculam_list();
                $data['_view'] = 'course_schedule/edit';
                $this->load->view('layouts/main',$data);
            }
        }
        else
            show_error('The course_schedule you are trying to edit does not exist.');
    } 

    /*
     * Deleting course_schedule
     */
    function remove($id)
    {
        $course_schedule = $this->Course_schedule_model->get_course_schedule($id);

        // check if the course_schedule exists before trying to delete it
        if(isset($course_schedule['id']))
        {
            $this->Course_schedule_model->delete_course_schedule($id);
            redirect('course_schedule/index');
        }
        else
            show_error('The course_schedule you are trying to delete does not exist.');
    }
    
}