<?php
/* 
 * Generated by MegaBuilder v1.0 
 * www.MegaBuilder.com
 */
 
class Curriculam extends CI_Controller{
    function __construct()
    {
        parent::__construct();
        $this->load->model('Curriculam_model');
		$this->load->model('Courses_model');
        $this->load->model('Users_model');
    } 

    /*
     * Listing of curriculam
     */
    function index()
    {
        $params['limit'] = RECORDS_PER_PAGE; 
        $params['offset'] = ($this->input->get('per_page')) ? $this->input->get('per_page') : 0;
        
        $config = $this->config->item('pagination');
        $config['base_url'] = site_url('curriculam/index?');
        $config['total_rows'] = $this->Curriculam_model->get_all_curriculam_count();
        $this->pagination->initialize($config);

        $data['curriculam'] = $this->Curriculam_model->get_all_curriculam($params);
        
        $data['_view'] = 'curriculam/index';
        $this->load->view('layouts/main',$data);
    }

    /*
     * Adding a new curriculam ffffff
     */
    function add()
    {   
        $this->load->library('form_validation');

		//
		$this->form_validation->set_rules('course_id','Course_id','trim|required|max_length[10]');
$this->form_validation->set_rules('topic','Topic','trim|required|max_length[255]');
$this->form_validation->set_rules('description','Description','trim|required');
$this->form_validation->set_rules('timeline','Timeline','trim|required|max_length[10]');

		
		if($this->form_validation->run())     
        {   
            $params = array(
				//
				'course_id' => $this->input->post('course_id'),
'topic' => $this->input->post('topic'),
'description' => $this->input->post('description'),
'timeline' => $this->input->post('timeline'),

            );
            $params=$this->security->xss_clean($params);
            $curriculam_id = $this->Curriculam_model->add_curriculam($params);
            redirect('curriculam/index');
        }
        else
        {       
			
			
				$data['courses'] = $this->Courses_model->get_all_Courses();
            $data['users'] = $this->Users_model->user_info();
            $data['curriculam'] = $this->Curriculam_model->get_all_curriculam_list();
            $data['_view'] = 'curriculam/add';
            $this->load->view('layouts/main',$data);
        }
    }  

    /*
     * Editing a curriculam
     */
    function edit($id)
    {   
        // check if the curriculam exists before trying to edit it
        $data['curriculam'] = $this->Curriculam_model->get_curriculam($id);
        
        if(isset($data['curriculam']['id']))
        {
            $this->load->library('form_validation');

			//
			$this->form_validation->set_rules('course_id','Course_id','trim|required|max_length[10]');
$this->form_validation->set_rules('topic','Topic','trim|required|max_length[255]');
$this->form_validation->set_rules('description','Description','trim|required');
$this->form_validation->set_rules('timeline','Timeline','trim|required|max_length[10]');

		
			if($this->form_validation->run())     
            {   
                $params = array(
					//
					'course_id' => $this->input->post('course_id'),
'topic' => $this->input->post('topic'),
'description' => $this->input->post('description'),
'timeline' => $this->input->post('timeline'),

                );
				$params=$this->security->xss_clean($params);
                $this->Curriculam_model->update_curriculam($id,$params);            
                redirect('curriculam/index');
            }
            else
            {
				$data['courses'] = $this->Courses_model->get_all_Courses();
            $data['users'] = $this->Users_model->user_info();
            $data['curriculam'] = $this->Curriculam_model->get_all_curriculam_list();
                $data['_view'] = 'curriculam/edit';
                $this->load->view('layouts/main',$data);
            }
        }
        else
            show_error('The curriculam you are trying to edit does not exist.');
    } 

    /*
     * Deleting curriculam
     */
    function remove($id)
    {
        $curriculam = $this->Curriculam_model->get_curriculam($id);

        // check if the curriculam exists before trying to delete it
        if(isset($curriculam['id']))
        {
            $this->Curriculam_model->delete_curriculam($id);
            redirect('curriculam/index');
        }
        else
            show_error('The curriculam you are trying to delete does not exist.');
    }
    
}