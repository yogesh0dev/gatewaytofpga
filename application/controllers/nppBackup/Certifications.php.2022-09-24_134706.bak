<?php
/* 
 * Generated by MegaBuilder v1.0 
 * www.MegaBuilder.com
 */
 
class Certifications extends CI_Controller{
    function __construct()
    {
        parent::__construct();
        $this->load->model('Certifications_model');
		$this->load->model('Courses_model');
        $this->load->model('Users_model');
        $this->load->model('Curriculam_model');
    } 

    /*
     * Listing of certifications
     */
    function index()
    {
        $params['limit'] = RECORDS_PER_PAGE; 
        $params['offset'] = ($this->input->get('per_page')) ? $this->input->get('per_page') : 0;
        
        $config = $this->config->item('pagination');
        $config['base_url'] = site_url('certifications/index?');
        $config['total_rows'] = $this->Certifications_model->get_all_certifications_count();
        $this->pagination->initialize($config);

        $data['certifications'] = $this->Certifications_model->get_all_certifications($params);
        
        $data['_view'] = 'certifications/index';
        $this->load->view('layouts/main',$data);
    }

    /*
     * Adding a new certifications ffffff
     */
    function add()
    {   
        $this->load->library('form_validation');

		//
		$this->form_validation->set_rules('cid','Cid','trim|required|max_length[10]');
$this->form_validation->set_rules('sid','Sid','trim|required|max_length[10]');
$this->form_validation->set_rules('tid','Tid','trim|required|max_length[10]');
$this->form_validation->set_rules('cert_issue','Cert_issue','trim|required|max_length[10]');
$this->form_validation->set_rules('down_link','Down_link','trim|required|max_length[100]');

		
		if($this->form_validation->run())     
        {   
            $params = array(
				//
				'cid' => $this->input->post('cid'),
'sid' => $this->input->post('sid'),
'tid' => $this->input->post('tid'),
'cert_issue' => $this->input->post('cert_issue'),
'down_link' => $this->input->post('down_link'),

            );
            $params=$this->security->xss_clean($params);
            $certifications_id = $this->Certifications_model->add_certifications($params);
            redirect('certifications/index');
        }
        else
        {       
			
			$data['courses'] = $this->Courses_model->get_all_Courses();
            $data['users'] = $this->Users_model->user_info();
            $data['curriculam'] = $this->Curriculam_model->get_all_curriculam_list();
				
            $data['_view'] = 'certifications/add';
            $this->load->view('layouts/main',$data);
        }
    }  

    /*
     * Editing a certifications
     */
    function edit($id)
    {   
        // check if the certifications exists before trying to edit it
        $data['certifications'] = $this->Certifications_model->get_certifications($id);
        
        if(isset($data['certifications']['id']))
        {
            $this->load->library('form_validation');

			//
			$this->form_validation->set_rules('cid','Cid','trim|required|max_length[10]');
$this->form_validation->set_rules('sid','Sid','trim|required|max_length[10]');
$this->form_validation->set_rules('tid','Tid','trim|required|max_length[10]');
$this->form_validation->set_rules('cert_issue','Cert_issue','trim|required|max_length[10]');
$this->form_validation->set_rules('down_link','Down_link','trim|required|max_length[100]');

		
			if($this->form_validation->run())     
            {   
                $params = array(
					//
					'cid' => $this->input->post('cid'),
'sid' => $this->input->post('sid'),
'tid' => $this->input->post('tid'),
'cert_issue' => $this->input->post('cert_issue'),
'down_link' => $this->input->post('down_link'),

                );
				$params=$this->security->xss_clean($params);
				
                $this->Certifications_model->update_certifications($id,$params);            
                redirect('certifications/index');
            }
            else
            {
				$data['courses'] = $this->Courses_model->get_all_Courses();
            $data['users'] = $this->Users_model->user_info();
            $data['curriculam'] = $this->Curriculam_model->get_all_curriculam_list();
                $data['_view'] = 'certifications/edit';
                $this->load->view('layouts/main',$data);
            }
        }
        else
            show_error('The certifications you are trying to edit does not exist.');
    } 

    /*
     * Deleting certifications
     */
    function remove($id)
    {
        $certifications = $this->Certifications_model->get_certifications($id);

        // check if the certifications exists before trying to delete it
        if(isset($certifications['id']))
        {
            $this->Certifications_model->delete_certifications($id);
            redirect('certifications/index');
        }
        else
            show_error('The certifications you are trying to delete does not exist.');
    }
    
}