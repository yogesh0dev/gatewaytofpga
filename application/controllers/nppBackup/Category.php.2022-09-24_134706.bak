<?php
/* 
 * Generated by MegaBuilder v1.0 
 * www.MegaBuilder.com
 */
 
class Category extends CI_Controller{
    function __construct()
    {
        parent::__construct();
        $this->load->model('Category_model');
    } 

    /*
     * Listing of category
     */
    function index()
    {
        $params['limit'] = RECORDS_PER_PAGE; 
        $params['offset'] = ($this->input->get('per_page')) ? $this->input->get('per_page') : 0;
        
        $config = $this->config->item('pagination');
        $config['base_url'] = site_url('category/index?');
        $config['total_rows'] = $this->Category_model->get_all_category_count();
        $this->pagination->initialize($config);

        $data['category'] = $this->Category_model->get_all_category($params);
        
        $data['_view'] = 'category/index';
        $this->load->view('layouts/main',$data);
    }

    /*
     * Adding a new category ffffff
     */
    function add()
    {   
        $this->load->library('form_validation');

				//
		$this->form_validation->set_rules('category','Category','trim|required|max_length[100]');
		$this->form_validation->set_rules('subcateg','Subcateg','trim|required|max_length[100]');
		$this->form_validation->set_rules('icons','Category Icon','trim|required|max_length[100]');

		// imgs icons 
		if($this->form_validation->run())     
        {   
			/// upload docsA
				/// upload docsA
				$config['upload_path']   = './uploads/category'; 
				$config['allowed_types'] = 'gif|jpg|png'; 
				$config['max_size']      = 1000000; 
				$config['max_width']     = 3000; 
				$config['max_height']    = 3000;  
				$this->load->library('upload', $config);
				/////////////////////
				if ( ! $this->upload->do_upload('imgs')) {
					$data['error']= array('error' => $this->upload->display_errors()); 
					var_dump($data);echo '1'; exit();
				 }
					
				 else { 
					$data = array('upload_data' => $this->upload->data());
					$imgname=$data['upload_data']['file_name'];	
					/////////////////////
				$params = array(
					//
					
					'category' => $this->input->post('category'),
					'subcateg' => $this->input->post('subcateg'),
					'imgs' => $imgname,
					'icons' => $this->input->post('icons'),

				);
				$params=$this->security->xss_clean($params);
				$category_id = $this->Category_model->add_category($params);
				redirect('category/index');
			}
		}
        else
        {       
			
			
				
            $data['_view'] = 'category/add';
            $this->load->view('layouts/main',$data);
        }
    }  

    /*
     * Editing a category
     */
    function edit($id)
    {   
        // check if the category exists before trying to edit it
        $data['category'] = $this->Category_model->get_category($id);
        
        if(isset($data['category']['id']))
        {
            $this->load->library('form_validation');

			//
			$this->form_validation->set_rules('category','Category','trim|required|max_length[100]');
			$this->form_validation->set_rules('subcateg','Subcateg','trim|required|max_length[100]');
			$this->form_validation->set_rules('icons','Category Icon','trim|required|max_length[100]');
					
			if($this->form_validation->run())     
            {   
				/// upload docsA
					$config['upload_path']   = './uploads/category'; 
					$config['allowed_types'] = 'gif|jpg|png'; 
					$config['max_size']      = 1000000; 
					$config['max_width']     = 3000; 
					$config['max_height']    = 3000;  
					$this->load->library('upload', $config);
					/////////////////////
					if ( ! $this->upload->do_upload('imgs')) {
						$data['error']= array('error' => $this->upload->display_errors()); 
						var_dump($data);echo '1'; exit();
					 }
						
					 else { 
						$data = array('upload_data' => $this->upload->data());
						$imgname=$data['upload_data']['file_name'];	
						//var_dump($data['upload_data']);exit();
						/////////////////////
					$params = array(
						//
						
						'category' => $this->input->post('category'),
						'subcateg' => $this->input->post('subcateg'),
						'imgs' => $imgname,
						'icons' => $this->input->post('icons'),

					);
					$params=$this->security->xss_clean($params);
					$this->Category_model->update_category($id,$params);            
					redirect('category/index');
				 }
            }
            else
            {
                $data['_view'] = 'category/edit';
                $this->load->view('layouts/main',$data);
            }
        }
        else
            show_error('The category you are trying to edit does not exist.');
    } 

    /*
     * Deleting category
     */
    function remove($id)
    {
        $category = $this->Category_model->get_category($id);

        // check if the category exists before trying to delete it
        if(isset($category['id']))
        {
            $this->Category_model->delete_category($id);
            redirect('category/index');
        }
        else
            show_error('The category you are trying to delete does not exist.');
    }
    
}