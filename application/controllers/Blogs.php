<?php
/* 
 * Generated by MegaBuilder v1.0 
 * www.MegaBuilder.com
 */
 
class Blogs extends CI_Controller{
    function __construct()
    {
        parent::__construct();
        $this->load->model('Blogs_model');
        $this->load->model('Category_model');
		$data = $this->session->userdata;
		if($data['role']!='admin'){
				redirect(site_url().'signup');
			}
    } 

    /*
     * Listing of blogs
     */
    function index()
    {
        $params['limit'] = RECORDS_PER_PAGE; 
        $params['offset'] = ($this->input->get('per_page')) ? $this->input->get('per_page') : 0;
        
        $config = $this->config->item('pagination');
        $config['base_url'] = site_url('blogs/index?');
        $config['total_rows'] = $this->Blogs_model->get_all_blogs_count();
        $this->pagination->initialize($config);

        $data['blogs'] = $this->Blogs_model->get_all_blogs($params);
        
        $data['_view'] = 'blogs/index';
        $this->load->view('layouts/main2',$data);
    }

    /*
     * Adding a new blogs ffffff
     */
    function add()
    {   
        $this->load->library('form_validation');

		//
		$this->form_validation->set_rules('title','Title','trim|required|max_length[100]');
		$this->form_validation->set_rules('description','Description','trim|required');
		$this->form_validation->set_rules('categ','Categ','trim|required|max_length[10]');

		
		if($this->form_validation->run())     
        {   
			/// upload docsA
				$config['upload_path']   = './uploads/blogs'; 
				$config['allowed_types'] = 'gif|jpg|png'; 
				$config['max_size']      = 1000000; 
				$config['max_width']     = 3000; 
				$config['max_height']    = 3000;  
				$this->load->library('upload', $config);
				$this->upload->initialize($config);
				/////////////////////
				if ( ! $this->upload->do_upload('image')) {
					$data['error']= array('error' => $this->upload->display_errors()); 
					$data['category'] = $this->Category_model->get_all_category();
					$data['_view'] = 'blogs/edit';
					$this->load->view('layouts/main2',$data);
				 }
					
				 else { 
					$data = array('upload_data' => $this->upload->data());
					$imgname=$data['upload_data']['file_name'];	
					$params = array(
						//
						'title' => $this->input->post('title'),
						'description' => $this->input->post('description'),
						'image' => $imgname,
						'bdate' =>date('Y-m-d'),
						'categ' => $this->input->post('categ'),
						'types' => $this->input->post('types'),
						'slug' => $this->input->post('slug'),

					);
					$params=$this->security->xss_clean($params);
					$blogs_id = $this->Blogs_model->add_blogs($params);
					redirect('blogs/index');
				 }
        }
        else
        {       
			$data['category'] = $this->Category_model->get_all_category();
            $data['_view'] = 'blogs/add';
            $this->load->view('layouts/main2',$data);
        }
    }  

    /*
     * Editing a blogs
     */
    function edit($id)
    {   
        // check if the blogs exists before trying to edit it
        $data['blogs'] = $this->Blogs_model->get_blogs($id);
        if(isset($data['blogs']['id']))
        {
            $this->load->library('form_validation');

			//
			$this->form_validation->set_rules('title','Title','trim|required|max_length[100]');
			$this->form_validation->set_rules('description','Description','trim|required');
			$this->form_validation->set_rules('categ','Categ','trim|required|max_length[10]');

		
			if($this->form_validation->run())     
            {   
				if($_FILES['image']['name'] == "") {
					$imgname= $this->input->post('oldimage');
					// No file was selected for upload, your (re)action goes here
				}else{
		
				/// upload docsA
				$config['upload_path']   = './uploads/blogs'; 
				$config['allowed_types'] = 'gif|jpg|png'; 
				$config['max_size']      = 1000000; 
				$config['max_width']     = 3000; 
				$config['max_height']    = 3000;  
				$this->load->library('upload', $config);
				$this->upload->initialize($config);
				/////////////////////
				if ( ! $this->upload->do_upload('image')) {
				
					$data['error']= array('error' => $this->upload->display_errors()); 
					//var_dump($data);echo '1'; exit();
					$data['category'] = $this->Category_model->get_all_category();
					$data['_view'] = 'blogs/edit';
					$this->load->view('layouts/main2',$data);
				 }  else { 
			
					$data = array('upload_data' => $this->upload->data());
					$imgname=$data['upload_data']['file_name'];	
				 }
				}
					$params = array(
						//title description bdate categ
						'title' => $this->input->post('title'),
						'description' => $this->input->post('description'),
						'image' => $imgname,
						'categ' => $this->input->post('categ'),
						'types' => $this->input->post('types'),
						'slug' => $this->input->post('slug'),

					);
			
					$params=$this->security->xss_clean($params);
					$this->Blogs_model->update_blogs($id,$params);            
					redirect('blogs/index');
				
			}
            else
            {
				$data['category'] = $this->Category_model->get_all_category();
                $data['_view'] = 'blogs/edit';
                $this->load->view('layouts/main2',$data);
            }
        }
        else
            show_error('The blogs you are trying to edit does not exist.');
    } 

    /*
     * Deleting blogs
     */
    function remove($id)
    {
        $blogs = $this->Blogs_model->get_blogs($id);

        // check if the blogs exists before trying to delete it
        if(isset($blogs['id']))
        {
            $this->Blogs_model->delete_blogs($id);
            redirect('blogs/index');
        }
        else
            show_error('The blogs you are trying to delete does not exist.');
    }
    
}