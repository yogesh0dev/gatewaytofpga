<?php
/* 
 * Generated by MegaBuilder v1.0 
 * www.MegaBuilder.com
 */
 
class Users extends CI_Controller{
    function __construct()
    {
        parent::__construct();
        $this->load->model('Users_model');
        $this->load->model('User_model');
		$data = $this->session->userdata;
	if($data['role']!='admin'){
	        redirect(site_url().'signup');
	    }
    } 

/*
     * Adding a new chage status 
     */
	 
	 function status($status,$id)
    {
		
		if($status=='p'){
			$params = array('status' => 'Pending');
		}elseif($status=='a'){
			$params = array('status' => 'Approved');
		}elseif($status=='u'){
			$params = array('banned_users' => 'UnBan');
		}elseif($status=='b'){
			$params = array('banned_users' => 'Banned');
		}
		
		$params=$this->security->xss_clean($params);
		$this->Users_model->update_users($id,$params);        
		redirect(site_url().'students');
    }
    /* p">
a">
u">
b">
     * Listing of users
     */
    function index()
    {
        $params['limit'] = RECORDS_PER_PAGE; 
        $params['offset'] = ($this->input->get('per_page')) ? $this->input->get('per_page') : 0;
        
        $config = $this->config->item('pagination');
        $config['base_url'] = site_url('users/index?');
        $config['total_rows'] = $this->Users_model->get_all_users_count();
        $this->pagination->initialize($config);

        $data['users'] = $this->Users_model->get_all_users($params);
        
        $data['_view'] = 'users/index';
        $this->load->view('layouts/main2',$data);
    }
	
	function allusers()
    {
        $data['users'] = $this->Users_model->get_all_usersp();
        $data['_view'] = 'users/index';
        $this->load->view('layouts/main2',$data);
    }
	function students()
    {
        $data['users'] = $this->Users_model->get_all_usersp();
        $data['_view'] = 'users/students';
        $this->load->view('layouts/main2',$data);
    }
	function teachers()
    {
        $data['users'] = $this->Users_model->get_all_usersp();
        $data['_view'] = 'users/teachers';
        $this->load->view('layouts/main2',$data);
    }
	

    /*
     * Adding a new users ffffff
     */
    function add()
    {   
        $this->load->library('form_validation');

		//
		$this->form_validation->set_rules('email','Email','trim|required|max_length[100]');
		$this->form_validation->set_rules('first_name','First_name','trim|required|max_length[100]');
		$this->form_validation->set_rules('last_name','Last_name','trim|required|max_length[100]');
		$this->form_validation->set_rules('role','Role','trim|required|max_length[10]');
		
		if($this->form_validation->run())     
        {  	/// upload docsA
				$config['upload_path']   = './uploads/avatar'; 
				$config['allowed_types'] = 'gif|jpg|png'; 
				$config['max_size']      = 1000000; 
				$config['max_width']     = 3000; 
				$config['max_height']    = 3000;  
				$this->load->library('upload', $config);
				$this->upload->initialize($config);
				/////////////////////
				if ( ! $this->upload->do_upload('simg')) {
					$data['error']= array('error' => $this->upload->display_errors()); 
					
				 }
					
				 else { 
					$data = array('upload_data' => $this->upload->data());
					$imgname=$data['upload_data']['file_name'];							
							///////////////////// 
						$params = array(
							//
							'email' => $this->input->post('email'),
							'first_name' => $this->input->post('first_name'),
							'last_name' => $this->input->post('last_name'),
							'role' => $this->input->post('role'),
							'simg' => $imgname

						);
						$params=$this->security->xss_clean($params);
						$id = $this->Users_model->add_users($params);
						$token = $this->User_model->insertToken($id);
    
							//generate token
							$qstring = $this->base64url_encode($token);
							$url = site_url() . 'main/complete/token/' . $qstring;
							$link = '<a href="' . $url . '">' . $url . '</a>';
			
							$this->load->library('email');
							$this->load->library('sendmail');
							
							$message = $this->sendmail->sendRegister($this->input->post('lastname'),$this->input->post('email'),$link,$sTl);
							$to_email = $this->input->post('email');
							$this->email->from($this->config->item('register'), 'Set Password ' . $this->input->post('firstname') .' '. $this->input->post('lastname')); //from sender, title email
							$this->email->to($to_email);
							$this->email->subject('Set Password Login');
							$this->email->message($message);
							$this->email->set_mailtype("html");
			
							//Sending mail
							if($this->email->send()){
								redirect('users/index');
							}
				 }
				 $data['_view'] = 'users/add';
				 $this->load->view('layouts/main2',$data);
        }
        else
        {       
			
			
				
            $data['_view'] = 'users/add';
            $this->load->view('layouts/main2',$data);
        }
    }  

    /*
     * Editing a users
     */
    function edit($id)
    {   
        // check if the users exists before trying to edit it
        $data['users'] = $this->Users_model->get_users($id);
        
        if(isset($data['users']['id']))
        {
            $this->load->library('form_validation');

			//
			$this->form_validation->set_rules('email','Email','trim|required|max_length[100]');
			$this->form_validation->set_rules('first_name','First_name','trim|required|max_length[100]');
			$this->form_validation->set_rules('last_name','Last_name','trim|required|max_length[100]');
			$this->form_validation->set_rules('role','Role','trim|required|max_length[10]');
		
			if($this->form_validation->run())     
            {   /// upload docsA
		
			    if($_FILES['simg']['name'] == "") {
					$imgname= $this->input->post('oldimage');
					// No file was selected for upload, your (re)action goes here
				}else{
				$config['upload_path']   = './uploads/avatar'; 
				$config['allowed_types'] = 'gif|jpg|png'; 
				$config['max_size']      = 1000000; 
				$config['max_width']     = 3000; 
				$config['max_height']    = 3000;  
				$this->load->library('upload', $config);
				$this->upload->initialize($config);
				/////////////////////
				if ( ! $this->upload->do_upload('simg')) {
					$data['error']= array('error' => $this->upload->display_errors()); 
					//var_dump($data);echo '1'; exit();
				 }
					
				 else { 
					$data = array('upload_data' => $this->upload->data());
					$imgname=$data['upload_data']['file_name'];	
				 }
				}
					$params = array(
						//
						'email' => $this->input->post('email'),
						'first_name' => $this->input->post('first_name'),
						'last_name' => $this->input->post('last_name'),
						'role' => $this->input->post('role'),
						'simg' => $imgname

					);
					$params=$this->security->xss_clean($params);
					$this->Users_model->update_users($id,$params);            
					redirect('users/index');
            }
            else
            {
				$data['error']= validation_errors(); 
                $data['_view'] = 'users/edit';
                $this->load->view('layouts/main2',$data);
            }
        }
        else
            show_error('The users you are trying to edit does not exist.');
    } 

    /*
     * Deleting users
     */
    function remove($id)
    {
        $users = $this->Users_model->get_users($id);

        // check if the users exists before trying to delete it
        if(isset($users['id']))
        {
            $this->Users_model->delete_users($id);
            redirect('users/index');
        }
        else
            show_error('The users you are trying to delete does not exist.');
    }
	public function base64url_encode($data) {
      return rtrim(strtr(base64_encode($data), '+/', '-_'), '=');
    }

    public function base64url_decode($data) {
      return base64_decode(str_pad(strtr($data, '-_', '+/'), strlen($data) % 4, '=', STR_PAD_RIGHT));
    }
    
}