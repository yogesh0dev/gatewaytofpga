<?php
/* 
 * Generated by MegaBuilder v1.0 
 * www.MegaBuilder.com
 */
 
class Internship extends CI_Controller{
    function __construct()
    {
        parent::__construct();
        $this->load->model('Internship_model');
        $this->load->model('Common_model');
        $this->load->model('Courses_model');
		$this->load->library('session');
		
    } 

    /*
     * Listing of internship 
     */
    function index()
    {
		$data = $this->session->userdata;
		if($data['role']!='admin'){
	        redirect(site_url().'signup');
	    }
        
        $data['internship'] = $this->Internship_model->get_all_internship();
        
        $data['_view'] = 'internship/index';
        $this->load->view('layouts/main2',$data);
    }
/*
     * Adding a new chage status 
     */
	 
	 function status($status,$id)
    {
		$params = array('status' => $status);
		$params=$this->security->xss_clean($params);
		$this->Internship_model->update_internship($id,$params);        
		redirect(site_url().'internship');
    }
    /*
     * Adding a new internship ffffff
     */
    function add()
    {   
        $this->load->library('form_validation');
			//var_dump($_POST);
			// exit();
		//
		$this->form_validation->set_rules('full_name','First Name','trim|required|max_length[255]');
		$this->form_validation->set_rules('last_name','Last Name','trim|required|max_length[255]');
		$this->form_validation->set_rules('email','Email','trim|required|max_length[100]');
		$this->form_validation->set_rules('phn','Phone Number','trim|required|numeric|max_length[12]');
		$this->form_validation->set_rules('gender','Gender','trim|required|max_length[10]');
		$this->form_validation->set_rules('dob','Date of birth','trim|required');
		$this->form_validation->set_rules('caddress','Contact Address','trim|required|max_length[255]');
		$this->form_validation->set_rules('paddress','Permanent Address','trim|required|max_length[255]');
		$this->form_validation->set_rules('state','State','trim|required|max_length[10]');
		$this->form_validation->set_rules('college','College','trim|required|max_length[255]');
		$this->form_validation->set_rules('degree','Degree','trim|required|max_length[255]');
		$this->form_validation->set_rules('designation','Designation','trim|required|max_length[255]');
		$this->form_validation->set_rules('areaofexpertise','Areaofexpertise','trim|required|max_length[255]');
		$this->form_validation->set_rules('duration','Duration','trim|required|max_length[50]');
		$this->form_validation->set_rules('otherinfo','Otherinfo','trim|required');
		$this->form_validation->set_rules('careergoals','Careergoals','trim|required');
		$this->form_validation->set_rules('corrections','Please accept terms','trim|required');
		$this->form_validation->set_rules('actions','Please accept our policy','trim|required');
		$this->form_validation->set_rules('country','Please Select Country','trim|required');
		$this->form_validation->set_rules('state','Please Select State','trim|required');
		$this->form_validation->set_rules('city','Please Select City','trim|required');


		if($this->form_validation->run())     
        {   
	
			/// upload docsA
				$config['upload_path']   = './uploads/resume'; 
				$config['allowed_types'] = 'doc|pdf'; 
				$config['max_size']      = 1000000; 
				$config['max_width']     = 3000; 
				$config['max_height']    = 3000;  
				$this->load->library('upload', $config);
				$this->upload->initialize($config);
				
				/////////////////////
				if (!$this->upload->do_upload('resume')) {
					$data['error']= array('error' => $this->upload->display_errors()); 
				 }
					
				else { 
						$data = array('upload_data' => $this->upload->data());
						$imgname=$data['upload_data']['file_name'];
				}
				
			/// upload avatar
				$configa['upload_path']   = './uploads/avatar'; 
				$configa['allowed_types'] = 'jpeg|jpg|png'; 
				$configa['max_size']      = 1000000; 
				$configa['max_width']     = 3000; 
				$configa['max_height']    = 3000;  
				$this->upload->initialize($configa);
				/////////////////////
				if (!$this->upload->do_upload('avatar')) {
					$data['error']= array('error' => $this->upload->display_errors()); 
				 }
					
				else { 
						$data = array('upload_data' => $this->upload->data());
						$avatar=$data['upload_data']['file_name'];
				}
					
				$params = array(
					//
					'first_name' => $this->input->post('full_name'),
					'last_name' => $this->input->post('last_name'),
					'email' => $this->input->post('email'),
					'phn' => $this->input->post('phn'),
					'gender' => $this->input->post('gender'),
					'dob' => $this->input->post('dob'),
					'caddress' => $this->input->post('caddress'),
					'paddress' => $this->input->post('paddress'),
					'state' => $this->input->post('state'),
					'college' => $this->input->post('college'),
					'degree' => $this->input->post('degree'),
					'designation' => $this->input->post('designation'),
					'areaofexpertise' => $this->input->post('areaofexpertise'),
					'resume' => $imgname,
					'avatar' => $avatar,
					'duration' => $this->input->post('duration'),
					'otherinfo' => $this->input->post('otherinfo'),
					'careergoals' => $this->input->post('careergoals'),
					
					'corrections' => $this->input->post('corrections'),
					'actions' => $this->input->post('actions'),
					'country' => $this->input->post('country'),
					'state' => $this->input->post('state'),
					'city' => $this->input->post('city'),
				);
				
					$params=$this->security->xss_clean($params);
					if($this->Internship_model->add_internship($params)){
						$this->load->library('email');
						$this->load->library('sendmail');
						$enquery="Internship";
						$message = $this->sendmail->sendFormsData($enquery,$params,$link,$token,$sTl);
						$to_email = 'shailender@infotonicsmedia.com';
						$this->email->from($this->config->item('forgot'), 'New Form From FPGA website! ' . $this->input->post('firstname') .' '. $this->input->post('lastname')); //from sender, title email
						$this->email->to($to_email);
						$this->email->subject('FPGA::New For from FPGA website');
						$this->email->message($message);
						$this->email->set_mailtype("html");
		
						if($this->email->send()){
							$data['error']='Your Information stored successfully, We will get back to you asap :).';
						}else{
							$this->session->set_flashdata('flash_message', 'There was a problem sending an email.');
							echo 'error in sending email';
							exit;
						}
						
						
					// }
				
				
				
				
				
				if($_SESSION['role']=='admin'){
					redirect('internship/index');
				}else{
						$data['error']='Your Information stored successfully, We will get back to you asap :).';
						$data['page']='internship';
						$data['_view'] = 'FrontWebsite/internship';
						$this->load->view('FrontWebsite/layout/main',$data);
				}
			}
		}
        else
        {  
	
			if($_SESSION['role']=='admin'){
				$data['_view'] = 'internship/add';
				$this->load->view('layouts/main2',$data);
			}else{
				$data['error']=validation_errors();
				$data['page']='internship';
				$data['_view'] = 'FrontWebsite/internship';
				$this->load->view('FrontWebsite/layout/main',$data);
			}
	}
    }  

    /*
     * Editing a internship
     */
    function edit($id)
    {   
		$data = $this->session->userdata;
	if($data['role']!='admin'){
	        redirect(site_url().'signup');
	    }
        // check if the internship exists before trying to edit it
        $data['internship'] = $this->Internship_model->get_internship($id);
        
        if(isset($data['internship']['id']))
        {
            $this->load->library('form_validation');

			//
			$this->form_validation->set_rules('first_name','First Name','trim|required|max_length[255]');
			$this->form_validation->set_rules('last_name','Last Name','trim|required|max_length[255]');
			$this->form_validation->set_rules('email','Email','trim|required|max_length[100]');
			$this->form_validation->set_rules('phn','Phn','trim|required|max_length[12]');
			$this->form_validation->set_rules('gender','Gender','trim|required|max_length[1]');
			$this->form_validation->set_rules('dob','Dob','trim|required');
			$this->form_validation->set_rules('caddress','Caddress','trim|required|max_length[255]');
			$this->form_validation->set_rules('paddress','Paddress','trim|required|max_length[255]');
			$this->form_validation->set_rules('college','College','trim|required|max_length[255]');
			$this->form_validation->set_rules('degree','Degree','trim|required|max_length[255]');
			$this->form_validation->set_rules('designation','Designation','trim|required|max_length[255]');
			$this->form_validation->set_rules('areaofexpertise','Area of expertise','trim|required|max_length[255]');
			$this->form_validation->set_rules('duration','Duration','trim|required|max_length[50]');
			$this->form_validation->set_rules('otherinfo','Otherinfo','trim|required');
			$this->form_validation->set_rules('careergoals','Careergoals','trim|required');

		
			if($this->form_validation->run())     
            {   
                $params = array(
					//
					'first_name' => $this->input->post('first_name'),
					'last_name' => $this->input->post('last_name'),
					'email' => $this->input->post('email'),
					'phn' => $this->input->post('phn'),
					'gender' => $this->input->post('gender'),
					'dob' => $this->input->post('dob'),
					'caddress' => $this->input->post('caddress'),
					'paddress' => $this->input->post('paddress'),
					'college' => $this->input->post('college'),
					'degree' => $this->input->post('degree'),
					'designation' => $this->input->post('designation'),
					'areaofexpertise' => $this->input->post('areaofexpertise'),
					'duration' => $this->input->post('duration'),
					'otherinfo' => $this->input->post('otherinfo'),
					'careergoals' => $this->input->post('careergoals')

                );
				$params=$this->security->xss_clean($params);
                $this->Internship_model->update_internship($id,$params);            
                redirect('internship/index');
            }
            else
            {
				$data['courses'] = $this->Courses_model->get_all_Courses();
                $data['_view'] = 'internship/edit';
                $this->load->view('layouts/main2',$data);
            }
        }
        else
            show_error('The internship you are trying to edit does not exist.');
    } 

    /*
     * Deleting internship
     */
    function remove($id)
    {
        $internship = $this->Internship_model->get_internship($id);

        // check if the internship exists before trying to delete it
        if(isset($internship['id']))
        {
            $this->Internship_model->delete_internship($id);
            redirect('internship/index');
        }
        else
            show_error('The internship you are trying to delete does not exist.');
    }
    
}